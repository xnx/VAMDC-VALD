# -*- coding: utf-8 -*-

RETURNABLES = {\
'NodeID':'vald',
'SourceID':'Source.id',
'SourceAuthorName':'Source.author',
'SourceCategory':'Source.category',
'SourcePageBegin':'Source.pages',
'SourcePageEnd':'Source.pages',
'SourceName':'Source.journal',
'SourceTitle':'Source.title',
'SourceURI':'Source.url',
'SourceVolume':'Source.volume',
'SourceYear':'Source.year',
#'MethodID':'"MOBS"',
#'MethodCategory':'"observed"',
#'MethodDescription':'',
############################################################
'MoleculeStateID':'MoleculeState.id',
'MoleculeChemicalName':'Molecule.name',
'MoleculeSpeciesID':'Molecule.id',
'MoleculeInchiKey':'Molecule.inchikey',
'MoleculeInchi':'Molecule.inchi',
'MoleculeStateEnergy':'MoleculeState.energy',
'MoleculeStateEnergyRef':'MoleculeState.getRefs("energy")',
'MoleculeStateEnergyUnit':'1/cm',
#############################################################
'AtomStateID':'AtomState.id',
'AtomSymbol':'Atom.name',
'AtomSpeciesID':'Atom.id',
'AtomInchiKey':'Atom.inchikey',
'AtomInchi':'Atom.inchi',
'AtomNuclearCharge':'Atom.atomic',
'AtomIonCharge':'Atom.ion',
'AtomMassNumber':'Atom.massno',
'AtomStateLandeFactor':'AtomState.lande',
'AtomStateLandeFactorUnit':'unitless',
'AtomStateLandeFactorRef':'AtomState.getRefs("lande")',
'AtomStateEnergy':'AtomState.energy',
'AtomStateEnergyRef':'AtomState.getRefs("energy")',
'AtomStateEnergyUnit':'1/cm',
'AtomStateTotalAngMom':'AtomState.j',
'AtomStateParity':'AtomState.p',
'AtomStateTermLSL':'AtomState.l',
'AtomStateTermS':'AtomState.s',
'AtomStateTermJ1J2':'AtomState.j1j2()',
'AtomStateTermJKJ':'AtomState.jc',
'AtomStateTermJKS':'AtomState.s2',
'AtomStateTermK':'AtomState.k',
#############################################################
'RadTransSpeciesRef':'RadTran.species_id',
'RadTransComments':'Wavelength is for vacuum.',
'RadTransWavelength':'RadTran.vacwave',
'RadTransWavelengthUnit':u'A',
'RadTransWavelengthRef':'RadTran.getRefs("wave")',
'RadTransFinalStateRef':'RadTran.upstate_id',
'RadTransInitialStateRef':'RadTran.lostate_id',
'RadTransEffectiveLandeFactor':'RadTran.landeff',
'RadTransEffectiveLandeFactorUnit':'unitless',
'RadTransEffectiveLandeFactorRef':'RadTran.getRefs("lande")',
'RadTransProbabilityLog10WeightedOscillatorStrength':'RadTran.loggf',
#'RadTransProbabilityLog10WeightedOscillatorStrengthAccuracy':'RadTran.accur',
'RadTransProbabilityLog10WeightedOscillatorStrengthUnit':'unitless',
'RadTransProbabilityLog10WeightedOscillatorStrengthRef':'RadTran.getRefs("loggf")',
'RadTransBroadeningNaturalLineshapeParameter':'RadTran.gammarad',
'RadTransBroadeningNaturalLineshapeParameterName':'log(gamma)',
'RadTransBroadeningNaturalLineshapeParameterUnit':'cm3/s',
'RadTransBroadeningNaturalRef':'RadTran.getRefs("gammarad")',
'RadTransBroadeningNaturalLineshapeName':'lorentzian',
'RadTransBroadeningPressureLineshapeParameter':'RadTran.gammastark',
'RadTransBroadeningPressureLineshapeName':'lorentzian',
'RadTransBroadeningPressureLineshapeParameterName':'log(gamma)',
'RadTransBroadeningPressureLineshapeParameterUnit':'cm3/s',
'RadTransBroadeningPressureRef':'RadTran.getRefs("gammastark")',
'RadTransBroadeningPressureEnvironment':'stark',
'RadTransBroadeningPressureComment':'Stark Broadening',
#'RadTransBroadeningPressureLineshapeParameter':'RadTran.getWaals()',
#'RadTransBroadeningPressureLineshapeParameterUnit':'["cm3/s","unitless"]',
#'RadTransBroadeningPressureLineshapeName':'lorentzian',
#'RadTransBroadeningPressureLineshapeParameterName':'["log(gamma)","alpha"]',
#'RadTransBroadeningPressureRef':'RadTran.getRefs("waals")',
}

# import the unit converter functions
from vamdctap.unitconv import *

RESTRICTABLES = {\
'AtomSymbol':'species__name',
'AtomNuclearCharge':'species__atomic',
'AtomIonCharge':'species__ion',
'AtomStateEnergy':'upstate__energy',
'RadTransWavelength':'vacwave',
'RadTransWavenumber':('vacwave',invcm2Angstr),
'RadTransFrequency':('vacwave',Hz2Angstr),
'RadTransEnergy':('vacwave',eV2Angstr),
'RadTransProbabilityLog10WeightedOscillatorStrength':'loggf',
'RadTransBroadeningNatural':'gammarad',
'RadTransBroadeningPressure':'gammastark',
}

